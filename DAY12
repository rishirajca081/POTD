TASK 1.)
The product difference between two pairs (a, b) and (c, d) is defined as (a * b) - (c * d).

For example, the product difference between (5, 6) and (2, 7) is (5 * 6) - (2 * 7) = 16.
Given an integer array nums, choose four distinct indices w, x, y, and z such that the product difference between pairs (nums[w], nums[x]) and (nums[y], nums[z]) is maximized.

Return the maximum such product difference.

 

Example 1:

Input: nums = [5,6,2,7,4]
Output: 34
Explanation: We can choose indices 1 and 3 for the first pair (6, 7) and indices 2 and 4 for the second pair (2, 4).
The product difference is (6 * 7) - (2 * 4) = 34.

class Solution {
    public int maxProductDifference(int[] nums) {
        int max1=Integer.MIN_VALUE;
        int min1=Integer.MAX_VALUE;
        int max2=Integer.MIN_VALUE;
        int min2=Integer.MAX_VALUE;
        int index1=0,index2=0;
        for(int i=0;i<nums.length;i++){
            if(max1<nums[i]){
                max1=nums[i];
                index1=i;
            }
            if(min1>nums[i]){
                min1=nums[i];
                index2=i;
            }
        }
        for(int i=0;i<nums.length;i++){
            if(max2<nums[i]&&i!=index1){
                max2=nums[i];
            }
            if(min2>nums[i]&&i!=index2){
                min2=nums[i];
            }
        }
        return (max1*max2-min1*min2);
    }
}
